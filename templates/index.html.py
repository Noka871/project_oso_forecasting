< !DOCTYPE
html >
< html
lang = "ru" >
< head >
< meta
charset = "UTF-8" >
< meta
name = "viewport"
content = "width=device-width, initial-scale=1.0" >
< title > –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
–û–°–û - –í–∏–∑—É–∞–ª—å–Ω—ã–π
–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å < / title >
< style >
body
{
    font - family: Arial, sans - serif;
max - width: 1200
px;
margin: 0
auto;
padding: 20
px;
background - color:  # f5f5f5;
}
.container
{
    background: white;
padding: 30
px;
border - radius: 10
px;
box - shadow: 0
2
px
10
px
rgba(0, 0, 0, 0.1);
}
h1
{
    color:  # 2c3e50;
        text - align: center;
margin - bottom: 30
px;
}
.btn
{
    background:  # 3498db;
        color: white;
padding: 12
px
24
px;
border: none;
border - radius: 5
px;
cursor: pointer;
font - size: 16
px;
margin: 10
px;
transition: background
0.3
s;
}
.btn: hover
{
    background:  # 2980b9;
}
.btn: disabled
{
    background:  # 95a5a6;
        cursor: not -allowed;
}
.btn - success
{
    background:  # 27ae60;
}
.btn - success: hover
{
    background:  # 229954;
}
.btn - danger
{
    background:  # e74c3c;
}
.btn - danger: hover
{
    background:  # c0392b;
}
.status
{
    padding: 15px;
margin: 10
px
0;
border - radius: 5
px;
border - left: 4
px
solid  # 3498db;
}
.status.success
{
    border - color:  # 27ae60;
        background:  # d5f4e6;
}
.status.error
{
    border - color:  # e74c3c;
        background:  # fadbd8;
}
.plot - container
{
    margin: 20px 0;
text - align: center;
}
.plot
{
    max - width: 100 %;
height: auto;
border: 1
px
solid  # ddd;
border - radius: 5
px;
}
.controls
{
    text - align: center;
margin: 30
px
0;
}
.step
{
    margin: 20px 0;
padding: 20
px;
border: 1
px
solid  # ddd;
border - radius: 5
px;
}
.step - number
{
    background:  # 3498db;
        color: white;
width: 30
px;
height: 30
px;
border - radius: 50 %;
display: inline - flex;
align - items: center;
justify - content: center;
margin - right: 10
px;
}
< / style >
< / head >
< body >
< div


class ="container" >

< h1 >üß™ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
–û–∑–æ–Ω–æ–≤–æ–≥–æ
–°–ª–æ—è < / h1 >

< div


class ="controls" >

< button


class ="btn" onclick="loadData()" > 1. –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ < / button >

< button


class ="btn" onclick="trainModel()" > 2. –û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å < / button >

< button


class ="btn btn-success" onclick="makePredictions()" > 3. –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã < / button >

< button


class ="btn btn-danger" onclick="resetApp()" > –°–±—Ä–æ—Å–∏—Ç—å < / button >

< / div >

< div
id = "status" > < / div >
< div
id = "plots" > < / div >

< div


class ="step" >

< h3 > < span


class ="step-number" > 1 < / span > –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö < / h3 >

< p > –ó–∞–≥—Ä—É–∂–∞–µ—Ç
–¥–∞–Ω–Ω—ã–µ
–æ
—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏
–æ–∑–æ–Ω–∞
–∏–∑
—Ñ–∞–π–ª–∞
–∏
–ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç
–∏—Ö
–¥–ª—è
–æ–±—É—á–µ–Ω–∏—è. < / p >
< / div >

< div


class ="step" >

< h3 > < span


class ="step-number" > 2 < / span > –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ < / h3 >

< p > –û–±—É—á–∞–µ—Ç
–Ω–µ–π—Ä–æ–Ω–Ω—É—é
—Å–µ—Ç—å
–Ω–∞
–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö
–¥–∞–Ω–Ω—ã—Ö.–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
—Å
—Ç—Ä–µ–º—è
—Å–∫—Ä—ã—Ç—ã–º–∏
—Å–ª–æ—è–º–∏. < / p >
< / div >

< div


class ="step" >

< h3 > < span


class ="step-number" > 3 < / span > –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ < / h3 >

< p > –í—ã–ø–æ–ª–Ω—è–µ—Ç
–ø—Ä–æ–≥–Ω–æ–∑—ã
–Ω–∞
—Ç–µ—Å—Ç–æ–≤—ã—Ö
–¥–∞–Ω–Ω—ã—Ö
–∏
—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç
–≥—Ä–∞—Ñ–∏–∫–∏
—Å—Ä–∞–≤–Ω–µ–Ω–∏—è. < / p >
< / div >
< / div >

< script >
function
showStatus(message, isSuccess=true)
{
    const
statusDiv = document.getElementById('status');
statusDiv.innerHTML = `
                      < div


class ="status ${isSuccess ? 'success' : 'error'}" >

< strong >${new
Date().toLocaleTimeString()}: < / strong > ${message}
< / div >
`;
}

function
loadData()
{
showStatus('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...', true);
fetch('/api/load_data', {method: 'POST'})
.then(response= > response.json())
.then(data= > {
    showStatus(data.message, data.success);
updateStatus();
})
.catch(error= > {
    showStatus('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error, false);
});
}

function
trainModel()
{
showStatus('–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏...', true);
fetch('/api/train_model', {method: 'POST'})
.then(response= > response.json())
.then(data= > {
    showStatus(data.message, data.success);
updateStatus();
})
.catch(error= > {
    showStatus('–û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è: ' + error, false);
});
}

function
makePredictions()
{
showStatus('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤...', true);
fetch('/api/predict', {method: 'POST'})
.then(response= > response.json())
.then(data= > {
    showStatus(data.message, data.success);
if (data.success & & data.plots)
{
    showPlots(data.plots);
}
updateStatus();
})
.catch(error= > {
    showStatus('–û—à–∏–±–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è: ' + error, false);
});
}

function
showPlots(plots)
{
const
plotsDiv = document.getElementById('plots');
plotsDiv.innerHTML = `
< h2 >üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã < / h2 >
< div


class ="plot-container" >

< h3 > –ò—Å—Ç–æ—Ä–∏—è
–æ–±—É—á–µ–Ω–∏—è < / h3 >
< img
src = "data:image/png;base64,${plots.training}"


class ="plot" alt="–ì—Ä–∞—Ñ–∏–∫ –æ–±—É—á–µ–Ω–∏—è" >

< / div >
< div


class ="plot-container" >

< h3 > –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
–ø—Ä–æ–≥–Ω–æ–∑–æ–≤ < / h3 >
< img
src = "data:image/png;base64,${plots.predictions}"


class ="plot" alt="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤" >

< / div >
`;
}

function
updateStatus()
{
fetch('/api/status')
.then(response= > response.json())
.then(data= > {
    console.log('–°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data);
});
}

function
resetApp()
{
if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?')) {
location.reload();
}
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º
–Ω–∞—á–∞–ª—å–Ω—ã–π
—Å—Ç–∞—Ç—É—Å
updateStatus();
< / script >
    < / body >
        < / html >